//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Nav         1
#define Sym         2
#define Fun         3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17 18>;
        };

        Hypen {
            bindings = <&kp MINUS>;
            key-positions = <19 31>;
            layers = <0>;
        };

        Tilde {
            bindings = <&kp TILDE>;
            key-positions = <20 10>;
            layers = <0>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        Zero {
            bindings = <&kp N0>;
            key-positions = <16 17>;
            layers = <1>;
        };

        Equals {
            bindings = <&kp EQUAL>;
            key-positions = <15 16>;
            layers = <1>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
                       &kp Q  &kp W  &kp E             &kp R         &kp T           &kp Y  &kp U      &kp I      &kp O    &kp P
                       &kp A  &kp S  &kp D             &kp F         &kp G           &kp H  &kp J      &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT ESCAPE  &kp Z  &kp X  &kp C             &kp V         &kp B           &kp N  &kp M      &kp COMMA  &kp DOT  &kp SLASH      &kp APOSTROPHE
                                     &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI    &mo 1  &kp SPACE  &mo 2
            >;
        };

        NavNum {
            display-name = "Nav";
            bindings = <
        &kp GRAVE  &kp KP_DIVIDE  &kp UP_ARROW  &kp KP_MULTIPLY  &kp LBRC    &kp RBRC  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_DIVIDE
        &none      &kp LEFT       &kp DOWN      &kp RIGHT        &kp LBKT    &kp RBKT  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&trans  &none      &kp MINUS      &kp EQUAL     &kp PLUS         &kp LPAR    &kp RPAR  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_MULTIPLY  &kp PLUS
                                  &trans        &trans           &trans      &trans    &trans        &trans
            >;
        };

        Symbol {
            display-name = "Sym";
            bindings = <
        &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp KP_ASTERISK  &kp SQT  &kp DQT
        &none     &none   &none     &none       &none          &none      &none          &none            &none    &none
&trans  &none     &none   &none     &none       &none          &kp UNDER  &kp EQUAL      &none            &none    &kp SLASH  &kp HOME
                          &trans    &trans      &trans         &trans     &trans         &trans
            >;
        };

        Function {
            display-name = "Fun";
            bindings = <
        &none  &kp F7  &kp F8  &kp F9  &none    &none  &kp F10       &kp F11       &kp F12       &none
        &none  &kp F4  &kp F5  &kp F6  &none    &none  &none         &none         &none         &none
&trans  &none  &kp F1  &kp F2  &kp F3  &none    &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &bt BT_CLR
                       &none   &none   &none    &none  &none         &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        FunctionLayer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
Ï
